[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "polars_upgrade"
version = "0.1.17"
authors = [
  { name="Marco Gorelli", email="33491632+MarcoGorelli@users.noreply.github.com" },
]
description = "Automatically upgrade Polars code to the latest version."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
  "tokenize-rt>=5.2.0",
]

[project.scripts]
polars-upgrade = "polars_upgrade._main:main"

[tool.ruff]
line-length = 90
fix = true
target-version = "py38"

select = [
#   "E", # pycodestyle
#   "W", # pycodestyle
#   "F", # Pyflakes
#   "B", # flake8-bugbear
#   "C4", # flake8-comprehensions
# #   "D", # flake8-docstrings
#   "SIM", # flake8-simplify
#   "TCH", # flake8-type-checking
#   "TID", # flake8-tidy-imports
#   "Q", # flake8-quotes
#   "UP", # pyupgrade
# #   "PT", # flake8-pytest-style
#   "RUF", # Ruff-specific rules
#   "PTH", # flake8-use-pathlib
  "ALL",
]
ignore = [
  'A003',
  'ANN101',
  'ANN401',
  'ARG002',  # todo: enable
  'ARG003',  # todo: enable
  'C901',
  'D',
  'DTZ',
  'E501',
  'FBT003',  # todo: enable
  'FIX',
  'PD',
  'PLR0911',
  'PLR0912',
  'PLR5501',
  'PLR2004',
  'PT011',
  'PTH',
  'RET505',
  'S',
  'SLF001',
  'TD',
  'TRY004'
]

[tool.ruff.isort]
force-single-line = true

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  'ignore:distutils Version classes are deprecated:DeprecationWarning',
]
xfail_strict = true

[tool.coverage.run]
plugins = ["covdefaults"]

[tool.coverage.report]
exclude_also = [
  "if POLARS_VERSION < ",
  "if sys.version_info() <",
]
